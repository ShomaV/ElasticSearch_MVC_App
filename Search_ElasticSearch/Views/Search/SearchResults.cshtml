@using System.Web.Mvc.Html
@using PagedList
@using PagedList.Mvc
@using Search_ElasticSearch.Models
@model SearchViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Search Results Page</h2>
@{
    var fromResults = Model.SearchResult.From + 1;
    IEnumerable<Product> products = Model.SearchResult.Results;
    var pageNumber =fromResults;
    var pageSize = Model.SearchResult.TotalOnPage;
    var total = Model.SearchResult.Total;
    var pageCount = total/pageSize;
}
<h3>Displaying results from @fromResults to @pageSize of @total</h3>
Page @fromResults of @pageCount
@using (Html.BeginForm("Index", "Search"))
{
    @Html.PagedListPager(new PagedList<Product>(products, fromResults, 1), page => Url.Action("Index",
      new { page, sortOrder = ViewBag.CurrentSort, currentFilter = Model.SearchTerm }))
    if (Model != null && Model.SearchResult.Results.Any())
    {
        foreach (Product result in Model.SearchResult.Results)
        {
            <div class="form-group">
                <p>@result.Name</p>
                <p>@result.Description</p>
            </div>
        }
    }
}
<br />

